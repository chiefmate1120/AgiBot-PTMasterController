<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_StateCtrlCycleTest" Id="{37a1bd87-8359-474c-8780-7d3c0e1ed657}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_StateCtrlCycleTest EXTENDS FB_MasterArmCtrlBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	//arm id
	m_armId:INT;			
	
	//test step
	m_testStep:INT:=-1;
	
	//motion parameters
	m_maxjntVel,m_maxjntAcc,m_maxjntJerk:Vec7d;
	
	//time
	m_time:LREAL;
		
	//test point
	m_testPoint:INT;
	
	//motion start
	m_startMotion:BOOL;
	m_startMotionLast:BOOL;
	
	//home position
	m_homeDHPos,m_startDHJntPos,m_endDHJntPos:Vec7d;
	
	//joint position gap
	m_jntDist:Vec7d:=[30.0*g_deg2Rad,20.0*g_deg2Rad,20.0*g_deg2Rad,30.0*g_deg2Rad,30.0*g_deg2Rad,20.0*g_deg2Rad,30.0*g_deg2Rad];
			
	//startJntPos,endJntPos :Vec8d;
	m_initJntPos,m_startJntPos,m_endJntPos :Vec7d;
	
	//Trajectory planner
	m_Planner: FB_TrajMoveJ;
	
	//basic function
	m_basicFun:FB_BasicFun;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="calcCmdJntPos" Id="{5b2e3266-ab40-4151-aca2-1ba7a2e07dc7}">
      <Declaration><![CDATA[// override this function in each exact controller
METHOD PROTECTED calcCmdJntPos : BOOL

VAR_IN_OUT CONSTANT
	i_slaveIdx :INT;
	i_shoulderPose :ST_Frame;
	i_masterArm :FB_MasterArm;
	i_slaveStatus :ST_SlaveStatus;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[

//init parameters flag
IF (m_startMotionLast=FALSE) AND (m_startMotion=TRUE)THEN
	m_testStep:=0;
END_IF
m_startMotionLast:=m_startMotion;

//frequency test and step test
testMotion(i_masterArm);

//update the information
updateInfo(i_masterArm);]]></ST>
      </Implementation>
    </Method>
    <Method Name="calcCmdJntTrq" Id="{91e23f49-6d0c-41cf-aba8-775679725efd}">
      <Declaration><![CDATA[// override this function in each exact controller
METHOD PROTECTED calcCmdJntTrq : BOOL

VAR_IN_OUT CONSTANT
	i_slaveIdx :INT;
	i_shoulderPose :ST_Frame;
	i_masterArm :FB_MasterArm;
	i_slaveStatus :ST_SlaveStatus;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="init" Id="{a116c71d-3874-4098-830c-8cc4cfd9d8ac}">
      <Declaration><![CDATA[// override this function in each exact controller
// NOTICE: set joint control mode here, and do some initialization if needed
METHOD PUBLIC init : BOOL
VAR_IN_OUT CONSTANT
	i_masterArm	:FB_MasterArm;
END_VAR
VAR_IN_OUT 
	r_masterArmCtrlCmd :ST_ArmCtrlCmds;
END_VAR

VAR
	i:INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
SUPER^.Init(i_masterArm,r_masterArmCtrlCmd);

//variable initialization
m_armId:=i_masterArm.armIdx;

//velocity---acceleration---jerk
vecMultiNum(GVL_ArmJointParameters.g_maxJntVel,0.2,m_maxjntVel);
vecMultiNum(m_maxjntVel,3,m_maxjntAcc);
vecMultiNum(m_maxjntAcc,3,m_maxjntJerk);

//joint home position---joint motion start position and end position
FOR i:=1 TO g_mJntNum BY 1 DO
	m_homeDHPos[i]:=gvl_const.g_jntDHInitPos[m_armId,i];
	m_startDHJntPos[i]:=m_homeDHPos[i]-m_jntDist[i];
	m_endDHJntPos[i]:=m_homeDHPos[i]+m_jntDist[i];	
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="testMotion" Id="{19b26b72-892d-4dd3-8aad-e8216d36cbf9}">
      <Declaration><![CDATA[METHOD testMotion : BOOL
VAR_INPUT
	i_masterArm :FB_MasterArm;
END_VAR

VAR
	//DH joint position
	startDHPos,endDHPos,targetDHPos :Vec7d;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
CASE m_testStep OF
	0: //init
		m_testPoint:=1;		
		
	
	10: //Trajectory parameter initialization
		m_basicFun.activeJnt2DH(i_activeJntPos:= i_masterArm.curJntPos, o_DHJntPos=> startDHPos);		
		IF (m_testPoint=1) THEN
			endDHPos:=m_startDHJntPos;
		ELSIF (m_testPoint=2) THEN
			endDHPos:=m_homeDHPos;
		ELSIF (m_testPoint=3) THEN
			endDHPos:=m_endDHJntPos;
		END_IF
		
		m_Planner.init(i_startJntPos:= startDHPos, 	i_targetJntPos:= endDHPos, 	i_maxJntVel:= m_maxjntVel, 	i_maxJntAcc:= m_maxjntAcc, 	i_maxJntJerk:= m_maxjntJerk);
		IF (m_Planner.isGene=FALSE) THEN
			m_testStep:=30;
		ELSE
			m_time:=0; m_testStep:=20;
		END_IF
		
		
	20: //start motion
		m_time:=m_time+g_armCtrlCycleTime;
		m_Planner.evaluate(t:= m_time, jntPos=> targetDHPos, jntVel=> m_cmdJntVel, jntAcc=> m_cmdJntAcc);
		m_basicFun.DH2activeJnt(i_DHJntPos:= targetDHPos, o_activeJntPos=> m_cmdJntPos);		
		
		IF (m_time>m_Planner.duration) THEN
			m_testStep:=10;			
			m_testPoint:=m_testPoint+1;
			IF (m_testPoint>3) THEN
				m_testPoint:=1;
			END_IF
		END_IF		
		
		//end the motion
		IF (m_startMotion=FALSE) THEN
			m_testStep:=30;
		END_IF
				
		
	30: //end the motion
		m_testStep:=-1;		
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Method Name="updateInfo" Id="{2c3bedc5-efa1-409d-9953-1b6bffd89a98}">
      <Declaration><![CDATA[METHOD updateInfo : BOOL
VAR_INPUT
	i_masterArm :FB_MasterArm;
END_VAR

VAR
	i:INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[

FOR i:=1 TO g_mJntNum BY 1 DO
	gvl_TestCycle.g_motorEncoder[m_armId][i]:=i_masterArm.m_joints[i].m_motorInputs.m_motorEncoder;
	gvl_TestCycle.g_jntEncoder[m_armId][i]:=i_masterArm.m_joints[i].m_motorInputs.m_linkEncoder;
END_FOR

]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_StateCtrlCycleTest">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_StateCtrlCycleTest.calcCmdJntPos">
      <LineId Id="12" Count="1" />
      <LineId Id="16" Count="6" />
      <LineId Id="14" Count="1" />
      <LineId Id="11" Count="0" />
      <LineId Id="23" Count="0" />
    </LineIds>
    <LineIds Name="FB_StateCtrlCycleTest.calcCmdJntTrq">
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="FB_StateCtrlCycleTest.init">
      <LineId Id="12" Count="1" />
      <LineId Id="20" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="17" Count="2" />
      <LineId Id="15" Count="1" />
      <LineId Id="21" Count="4" />
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="FB_StateCtrlCycleTest.testMotion">
      <LineId Id="9" Count="1" />
      <LineId Id="35" Count="0" />
      <LineId Id="39" Count="1" />
      <LineId Id="36" Count="0" />
      <LineId Id="11" Count="1" />
      <LineId Id="41" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="47" Count="3" />
      <LineId Id="45" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="14" Count="11" />
      <LineId Id="62" Count="0" />
      <LineId Id="26" Count="1" />
      <LineId Id="52" Count="3" />
      <LineId Id="28" Count="1" />
      <LineId Id="56" Count="0" />
      <LineId Id="59" Count="2" />
      <LineId Id="57" Count="0" />
      <LineId Id="30" Count="2" />
      <LineId Id="34" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_StateCtrlCycleTest.updateInfo">
      <LineId Id="7" Count="2" />
      <LineId Id="14" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>