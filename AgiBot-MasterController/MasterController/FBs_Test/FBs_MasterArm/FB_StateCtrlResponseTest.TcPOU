<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_StateCtrlResponseTest" Id="{de6669a5-1fe2-4852-8f76-c24f148c0802}" SpecialFunc="None">
    <Declaration><![CDATA[// Brief: Master Arm Test
FUNCTION_BLOCK PUBLIC FB_StateCtrlResponseTest EXTENDS FB_MasterArmCtrlBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	//frequency test flag	
	m_freqTestFlag :ARRAY[1..7] OF BOOL;

	//step test flag
	m_stepTestFlag :ARRAY[1..7] OF BOOL;

	//init joint position
	m_initJntPos :Vec7d;
	
	//joint motion frequency
	m_jntMotionFreq :Vec7d :=[0.2, 0.2, 0.1, 4(0.1)];
	
	//joint motion range
	m_jntMotionRange :Vec7d :=[pi/6, pi/6, 0.1, 4(pi/6)];
	
	//test joint id
	m_testJntIdx :INT :=1;
	
	//step test joint angle
	m_jntStep : LREAL := 3*g_deg2Rad;
	
	//arm test step
	m_stepCycle:LREAL:=5;
	
	//timer
	m_time:LREAL;
	
	//step test direction
	m_stepTestDir :ARRAY[1..7] OF INT:=[1,1,1,1,1,1,1];
	
	//cycle time
	m_cycleTime:LREAL:=5;
	
	//parameters init flag
	m_paramInitFlag:BOOL;
	
	//test step
	m_testStep:INT:=-1;
	
	//start motion flag
	m_startMotion,m_startMotionLast:BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="armJntTest" Id="{7b22de9c-7f09-4d4d-b2c8-78a95b07f7f3}">
      <Declaration><![CDATA[METHOD armJntTest : BOOL
VAR_INPUT
	i_masterArm :FB_MasterArm;
END_VAR

VAR
	//
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[

CASE m_testStep OF 
	0: //init the parameters
		m_initJntPos := i_masterArm.curJntPos;
		m_jntOPMode := g_allPosMode;
		
		//after change the control mode,we need to change the inital target joint position and velocity
		m_cmdJntPos:=i_masterArm.curJntPos;
		m_cmdJntVel:=g_zeroVec7d;	
		m_time:=0;
		
		IF (m_testJntIdx >=1 AND m_testJntIdx <=7) THEN
			m_testStep:=10;
		END_IF
		
		
	10:// start the motion
		m_time:=m_time+g_armCtrlCycleTime;
	
		IF (m_freqTestFlag[m_testJntIdx]=TRUE) THEN 
			m_cmdJntPos[m_testJntIdx]:=m_initJntPos[m_testJntIdx]+m_jntMotionRange[m_testJntIdx]/2
										+0.5*m_jntMotionRange[m_testJntIdx]*SIN(2*pi*m_jntMotionFreq[m_testJntIdx]*m_time-pi/2);
			m_cmdJntVel[m_testJntIdx]:=0.5*m_jntMotionRange[m_testJntIdx]*2*pi*m_jntMotionFreq[m_testJntIdx]*COS(2*pi*m_jntMotionFreq[m_testJntIdx]*m_time-pi/2);
		END_IF
		
		//step test
		IF (m_stepTestFlag[m_testJntIdx]=TRUE) THEN
			IF (m_time>m_cycleTime) THEN				
				//update the position every cycle
				m_time:=0;
				
				//change the joint motion direction
				IF (m_stepTestDir[m_testJntIdx]=1) THEN
					m_stepTestDir[m_testJntIdx]:=-1;
				ELSE
					m_stepTestDir[m_testJntIdx]:=1;
				END_IF
				
				//update the target joint position
				m_cmdJntPos[m_testJntIdx]:=m_initJntPos[m_testJntIdx]+0.5*m_jntStep*m_stepTestDir[m_testJntIdx];
				m_cmdJntVel[m_testJntIdx]:=0;			
			END_IF	
		END_IF
				
		//finish the test
		IF (m_startMotion=FALSE) THEN
			m_testStep:=20;
		END_IF
		
		
	20://finish signal
		m_testStep:=-1;
		
	
	-1: //
END_CASE

]]></ST>
      </Implementation>
    </Method>
    <Method Name="calcCmdJntPos" Id="{57af1bb7-7499-481b-bb6b-1f8fc4340402}">
      <Declaration><![CDATA[METHOD PROTECTED calcCmdJntPos : BOOL
VAR_IN_OUT CONSTANT
	i_slaveIdx :INT;
	i_shoulderPose :ST_Frame;
	i_masterArm :FB_MasterArm;
	i_slaveStatus :ST_SlaveStatus;
END_VAR

VAR 
	errThres :LREAL;
	m_masterGripAngle: INT;
	i:int;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[

//init parameters flag
IF (m_startMotionLast=FALSE) AND (m_startMotion=TRUE)THEN
	m_testStep:=0;
END_IF
m_startMotionLast:=m_startMotion;

//frequency test and step test
armJntTest(i_masterArm);]]></ST>
      </Implementation>
    </Method>
    <Method Name="calcCmdJntTrq" Id="{d58d17c1-a945-4533-a795-abb65c1d06cb}">
      <Declaration><![CDATA[// override this function in each exact controller
METHOD PROTECTED calcCmdJntTrq : BOOL

VAR_IN_OUT CONSTANT
	i_slaveIdx :INT;
	i_shoulderPose :ST_Frame;
	i_masterArm :FB_MasterArm;
	i_slaveStatus :ST_SlaveStatus;
END_VAR

VAR 
	i:int;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_cmdJntTrq:=g_zeroVec7d;
FOR i:=1 TO g_mJntNum DO 
	//m_cmdJntTrq[i] := m_cmdJntTrq[i] + i_masterArm.jntFriction[i] ;
END_FOR

]]></ST>
      </Implementation>
    </Method>
    <Method Name="init" Id="{3ff9d01f-3a1f-4163-b69f-dc2d88b2d932}">
      <Declaration><![CDATA[METHOD PUBLIC init : BOOL
VAR_IN_OUT CONSTANT
	i_masterArm	:FB_MasterArm;
END_VAR
VAR_IN_OUT 
	r_masterArmCtrlCmd :ST_ArmCtrlCmds;
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[// check if to hold the command joint position unchanged
m_holdLastCmds := checkToHoldLastCmds(i_masterArm);

// init
SUPER^.Init(i_masterArm,r_masterArmCtrlCmd);

// update commands to arm
copyCmds(r_masterArmCtrlCmd);]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_StateCtrlResponseTest">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_StateCtrlResponseTest.armJntTest">
      <LineId Id="6" Count="2" />
      <LineId Id="11" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="21" Count="1" />
      <LineId Id="18" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="26" Count="4" />
      <LineId Id="38" Count="1" />
      <LineId Id="31" Count="0" />
      <LineId Id="35" Count="2" />
      <LineId Id="33" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="48" Count="12" />
      <LineId Id="44" Count="1" />
      <LineId Id="41" Count="0" />
      <LineId Id="65" Count="2" />
      <LineId Id="63" Count="1" />
      <LineId Id="42" Count="0" />
      <LineId Id="68" Count="3" />
      <LineId Id="16" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_StateCtrlResponseTest.calcCmdJntPos">
      <LineId Id="301" Count="0" />
      <LineId Id="305" Count="0" />
      <LineId Id="319" Count="6" />
      <LineId Id="113" Count="0" />
    </LineIds>
    <LineIds Name="FB_StateCtrlResponseTest.calcCmdJntTrq">
      <LineId Id="3" Count="4" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_StateCtrlResponseTest.init">
      <LineId Id="67" Count="4" />
      <LineId Id="15" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>